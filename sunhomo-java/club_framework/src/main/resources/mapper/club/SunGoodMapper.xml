<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sunhomo.club.mapper.SunGoodDao">
  <resultMap id="BaseResultMap" type="cn.sunhomo.club.domain.SunGood">
    <id column="GOOD_ID" jdbcType="INTEGER" property="goodId" />
    <result column="GOOD_NAME" jdbcType="VARCHAR" property="goodName" />
    <result column="GOOD_PHOTO" jdbcType="VARCHAR" property="goodPhoto" />
    <result column="QUANTIFIER" jdbcType="VARCHAR" property="quantifier" />
    <result column="VALUE" jdbcType="INTEGER" property="value" />
    <result column="STOCK" jdbcType="INTEGER" property="stock" />
    <result column="EXCHANGE" jdbcType="INTEGER" property="exchange" />
  </resultMap>
  <sql id="Base_Column_List">
    GOOD_ID, GOOD_NAME, GOOD_PHOTO, QUANTIFIER, `VALUE`, STOCK, EXCHANGE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SUN_GOOD
    where GOOD_ID = #{goodId,jdbcType=INTEGER}
  </select>
  <select id="selectAllGoods" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from SUN_GOOD
    order by VALUE
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SUN_GOOD
    where GOOD_ID = #{goodId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="GOOD_ID" keyProperty="goodId" parameterType="cn.sunhomo.club.domain.SunGood" useGeneratedKeys="true">
    insert into SUN_GOOD (GOOD_NAME, GOOD_PHOTO, QUANTIFIER, `VALUE`,
      STOCK, EXCHANGE)
    values (#{goodName,jdbcType=VARCHAR}, #{goodPhoto,jdbcType=VARCHAR}, #{quantifier,jdbcType=VARCHAR}, #{value,jdbcType=INTEGER},
      #{stock,jdbcType=INTEGER}, #{exchange,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="GOOD_ID" keyProperty="goodId" parameterType="cn.sunhomo.club.domain.SunGood" useGeneratedKeys="true">
    insert into SUN_GOOD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodName != null">
        GOOD_NAME,
      </if>
      <if test="goodPhoto != null">
        GOOD_PHOTO,
      </if>
      <if test="quantifier != null">
        QUANTIFIER,
      </if>
      <if test="value != null">
        `VALUE`,
      </if>
      <if test="stock != null">
        STOCK,
      </if>
      <if test="exchange != null">
        EXCHANGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodName != null">
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodPhoto != null">
        #{goodPhoto,jdbcType=VARCHAR},
      </if>
      <if test="quantifier != null">
        #{quantifier,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="exchange != null">
        #{exchange,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sunhomo.club.domain.SunGood">
    update SUN_GOOD
    <set>
      <if test="goodName != null">
        GOOD_NAME = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodPhoto != null">
        GOOD_PHOTO = #{goodPhoto,jdbcType=VARCHAR},
      </if>
      <if test="quantifier != null">
        QUANTIFIER = #{quantifier,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        `VALUE` = #{value,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        STOCK = #{stock,jdbcType=INTEGER},
      </if>
      <if test="exchange != null">
        EXCHANGE = #{exchange,jdbcType=INTEGER},
      </if>
    </set>
    where GOOD_ID = #{goodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sunhomo.club.domain.SunGood">
    update SUN_GOOD
    set GOOD_NAME = #{goodName,jdbcType=VARCHAR},
      GOOD_PHOTO = #{goodPhoto,jdbcType=VARCHAR},
      QUANTIFIER = #{quantifier,jdbcType=VARCHAR},
      `VALUE` = #{value,jdbcType=INTEGER},
      STOCK = #{stock,jdbcType=INTEGER},
      EXCHANGE = #{exchange,jdbcType=INTEGER}
    where GOOD_ID = #{goodId,jdbcType=INTEGER}
  </update>
</mapper>