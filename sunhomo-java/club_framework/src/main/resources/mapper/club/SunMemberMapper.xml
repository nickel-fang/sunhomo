<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sunhomo.club.mapper.SunMemberDao">
    <resultMap id="BaseResultMap" type="cn.sunhomo.club.domain.SunMember">
        <id column="MEMBER_ID" jdbcType="INTEGER" property="memberId"/>
        <result column="OPENID" jdbcType="VARCHAR" property="openid"/>
        <result column="MEMBER_NAME" jdbcType="VARCHAR" property="memberName"/>
        <result column="MEMBER_PHOTO" jdbcType="VARCHAR" property="memberPhoto"/>
        <result column="TOTAL_POINT" jdbcType="INTEGER" property="totalPoint"/>
        <result column="YEAR_POINT" jdbcType="INTEGER" property="yearPoint"/>
        <result column="POINT" jdbcType="INTEGER" property="point"/>
        <result column="WIN_NUMBER" jdbcType="INTEGER" property="winNumber"/>
        <result column="LOSE_NUMBER" jdbcType="INTEGER" property="loseNumber"/>
        <result column="RATIO" jdbcType="SMALLINT" property="ratio"/>
        <result column="SIGN_DATE" jdbcType="DATE" property="signDate"/>
        <result column="ENROLL_TIME" jdbcType="TIMESTAMP" property="enrollTime"/>
        <result column="IS_MASTER" jdbcType="TINYINT" property="isMaster"/>
        <result column="IS_ADMIN" jdbcType="TINYINT" property="isAdmin"/>
    </resultMap>
    <sql id="Base_Column_List">
    MEMBER_ID, OPENID, MEMBER_NAME, MEMBER_PHOTO, TOTAL_POINT, YEAR_POINT, POINT, WIN_NUMBER,
    LOSE_NUMBER, RATIO, SIGN_DATE, IS_ADMIN
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SUN_MEMBER
        where MEMBER_ID = #{memberId,jdbcType=INTEGER}
    </select>
    <select id="selectMembersByActivityId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select M.MEMBER_ID, M.OPENID, M.MEMBER_NAME, M.MEMBER_PHOTO, M.TOTAL_POINT, M.YEAR_POINT, M.POINT, M.WIN_NUMBER,
    M.LOSE_NUMBER, M.RATIO, M.SIGN_DATE, M.IS_ADMIN, MTA.IS_MASTER, MTA.ENROLL_TIME
    from SUN_MEMBER_TO_ACTIVITY MTA, SUN_MEMBER M
    where MTA.ACTIVITY_ID=#{activityId,jdbcType=INTEGER} and MTA.MEMBER_ID=M.MEMBER_ID
    order by MTA.ENROLL_TIME asc
  </select>
    <select id="selectMembersByDivisionId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select M.MEMBER_ID, M.OPENID, M.MEMBER_NAME, M.MEMBER_PHOTO, M.TOTAL_POINT, M.YEAR_POINT, M.POINT, M.WIN_NUMBER,
    M.LOSE_NUMBER, M.RATIO, M.SIGN_DATE, M.IS_ADMIN
    from SUN_MEMBER_TO_DIVISION MTD, SUN_MEMBER M
    where MTD.DIVISION_ID=#{divisionId,jdbcType=INTEGER} and MTD.MEMBER_ID=M.MEMBER_ID
  </select>
    <select id="selectMembers" parameterType="cn.sunhomo.club.domain.SunMember" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from SUN_MEMBER
        where 1=1
        //TODO 条件待补充
    </select>
    <select id="selectByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SUN_MEMBER
        where OPENID = #{openId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from SUN_MEMBER
        where MEMBER_ID in
        <foreach collection="array" item="memberId" open="(" separator="," close=")">
            #{memberId}
        </foreach>
    </delete>
    <insert id="insert" keyColumn="MEMBER_ID" keyProperty="memberId" parameterType="cn.sunhomo.club.domain.SunMember"
            useGeneratedKeys="true">
    insert into SUN_MEMBER (OPENID, MEMBER_NAME, MEMBER_PHOTO,
      TOTAL_POINT, YEAR_POINT, POINT,
      WIN_NUMBER, LOSE_NUMBER, RATIO,
      SIGN_DATE)
    values (#{openid,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, #{memberPhoto,jdbcType=VARCHAR},
      #{totalPoint,jdbcType=INTEGER}, #{yearPoint,jdbcType=INTEGER}, #{point,jdbcType=INTEGER},
      #{winNumber,jdbcType=INTEGER}, #{loseNumber,jdbcType=INTEGER}, #{ratio,jdbcType=SMALLINT},
      #{signDate,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" keyColumn="MEMBER_ID" keyProperty="memberId"
            parameterType="cn.sunhomo.club.domain.SunMember" useGeneratedKeys="true">
        insert into SUN_MEMBER
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="openid != null">
                OPENID,
            </if>
            <if test="memberName != null">
                MEMBER_NAME,
            </if>
            <if test="memberPhoto != null">
                MEMBER_PHOTO,
            </if>
            <if test="totalPoint != null">
                TOTAL_POINT,
            </if>
            <if test="yearPoint != null">
                YEAR_POINT,
            </if>
            <if test="point != null">
                POINT,
            </if>
            <if test="winNumber != null">
                WIN_NUMBER,
            </if>
            <if test="loseNumber != null">
                LOSE_NUMBER,
            </if>
            <if test="ratio != null">
                RATIO,
            </if>
            <if test="signDate != null">
                SIGN_DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="memberName != null">
                #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberPhoto != null">
                #{memberPhoto,jdbcType=VARCHAR},
            </if>
            <if test="totalPoint != null">
                #{totalPoint,jdbcType=INTEGER},
            </if>
            <if test="yearPoint != null">
                #{yearPoint,jdbcType=INTEGER},
            </if>
            <if test="point != null">
                #{point,jdbcType=INTEGER},
            </if>
            <if test="winNumber != null">
                #{winNumber,jdbcType=INTEGER},
            </if>
            <if test="loseNumber != null">
                #{loseNumber,jdbcType=INTEGER},
            </if>
            <if test="ratio != null">
                #{ratio,jdbcType=SMALLINT},
            </if>
            <if test="signDate != null">
                #{signDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.sunhomo.club.domain.SunMember">
        update SUN_MEMBER
        <set>
            <if test="openid != null">
                OPENID = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="memberName != null">
                MEMBER_NAME = #{memberName,jdbcType=VARCHAR},
            </if>
            <if test="memberPhoto != null">
                MEMBER_PHOTO = #{memberPhoto,jdbcType=VARCHAR},
            </if>
            <if test="totalPoint != null">
                TOTAL_POINT = #{totalPoint,jdbcType=INTEGER},
            </if>
            <if test="yearPoint != null">
                YEAR_POINT = #{yearPoint,jdbcType=INTEGER},
            </if>
            <if test="point != null">
                POINT = #{point,jdbcType=INTEGER},
            </if>
            <if test="winNumber != null">
                WIN_NUMBER = #{winNumber,jdbcType=INTEGER},
            </if>
            <if test="loseNumber != null">
                LOSE_NUMBER = #{loseNumber,jdbcType=INTEGER},
            </if>
            <if test="ratio != null">
                RATIO = #{ratio,jdbcType=SMALLINT},
            </if>
            <if test="signDate != null">
                SIGN_DATE = #{signDate,jdbcType=VARCHAR},
            </if>
        </set>
        where MEMBER_ID = #{memberId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.sunhomo.club.domain.SunMember">
    update SUN_MEMBER
    set OPENID = #{openid,jdbcType=VARCHAR},
      MEMBER_NAME = #{memberName,jdbcType=VARCHAR},
      MEMBER_PHOTO = #{memberPhoto,jdbcType=VARCHAR},
      TOTAL_POINT = #{totalPoint,jdbcType=INTEGER},
      YEAR_POINT = #{yearPoint,jdbcType=INTEGER},
      POINT = #{point,jdbcType=INTEGER},
      WIN_NUMBER = #{winNumber,jdbcType=INTEGER},
      LOSE_NUMBER = #{loseNumber,jdbcType=INTEGER},
      RATIO = #{ratio,jdbcType=SMALLINT},
      SIGN_DATE = #{signDate,jdbcType=DATE}
    where MEMBER_ID = #{memberId,jdbcType=INTEGER}
  </update>
    <!--  批量更新会员积分  -->
    <update id="batchUpdate" parameterType="java.util.List">
        update SUN_MEMBER
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="TOTAL_POINT=case" suffix="end,">
                <foreach collection="list" item="member">
                    when MEMBER_ID=#{member.memberId} then #{member.totalPoint}
                </foreach>
            </trim>
            <trim prefix="YEAR_POINT=case" suffix="end,">
                <foreach collection="list" item="member">
                    when MEMBER_ID=#{member.memberId} then #{member.yearPoint}
                </foreach>
            </trim>
            <trim prefix="POINT=case" suffix="end,">
                <foreach collection="list" item="member">
                    when MEMBER_ID=#{member.memberId} then #{member.point}
                </foreach>
            </trim>
            <trim prefix="WIN_NUMBER=case" suffix="end,">
                <foreach collection="list" item="member">
                    when MEMBER_ID=#{member.memberId} then #{member.winNumber}
                </foreach>
            </trim>
            <trim prefix="LOSE_NUMBER=case" suffix="end,">
                <foreach collection="list" item="member">
                    when MEMBER_ID=#{member.memberId} then #{member.loseNumber}
                </foreach>
            </trim>
            <trim prefix="RATIO=case" suffix="end,">
                <foreach collection="list" item="member">
                    when MEMBER_ID=#{member.memberId} then #{member.ratio}
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" item="member" separator="or">
                MEMBER_ID=#{member.memberId}
            </foreach>
        </where>

    </update>
    <select id="getPointRecordsByMemberID" resultMap="cn.sunhomo.club.mapper.SunPointRecordDao.BaseResultMap">
        SELECT * FROM SUN_POINT_RECORD WHERE MEMBER_ID=#{memberId,jdbcType=INTEGER} ORDER BY POINT_RECORD_ID DESC LIMIT 20
    </select>

    <select id="getYearPointRecordsByOpenID" resultMap="cn.sunhomo.club.mapper.SunPointRecordDao.BaseResultMap">
        SELECT SPR.* FROM SUN_POINT_RECORD SPR,SUN_MEMBER SM WHERE SPR.MEMBER_ID=SM.MEMBER_ID
        AND SM.OPENID=#{openid,jdbcType=VARCHAR} AND SPR.POINT_RECORD_TYPE &lt; 100
        ORDER BY SPR.POINT_RECORD_ID DESC LIMIT 20
    </select>

    <select id="getActivitiesByMemberID" resultMap="cn.sunhomo.club.mapper.SunActivityDao.BaseResultMap">
        SELECT SA.* FROM SUN_MEMBER_TO_ACTIVITY SMTA
        LEFT JOIN SUN_ACTIVITY SA ON SMTA.ACTIVITY_ID=SA.ACTIVITY_ID
        WHERE SMTA.MEMBER_ID=#{memberId,jdbcType=INTEGER} AND SA.ACTIVITY_STATE=3 AND SMTA.IS_MASTER=0
        ORDER BY SA.ACTIVITY_ID DESC
        LIMIT 20
    </select>
    <select id="getGoodTransactionsByMemberID" resultMap="cn.sunhomo.club.mapper.SunGoodTransactionDao.BaseResultMap">
        select SGT.GOOD_TRANSACTION_ID, SGT.GOOD_ID, SGT.MEMBER_ID, SGT.GOOD_TRANSACTION_DATE, SGT.STATE, SG.GOOD_NAME
        from SUN_GOOD_TRANSACTION SGT
        left join SUN_GOOD SG on SGT.GOOD_ID = SG.GOOD_ID
        where SGT.MEMBER_ID = #{memberId,jdbcType=INTEGER}
        order by SGT.GOOD_TRANSACTION_ID desc
        limit 20
    </select>
    <select id="getTop10YearPointByOpenID" resultMap="BaseResultMap">
        SELECT * FROM(
        SELECT @rowno:=@rowno+1 as MEMBER_ID, SM.OPENID, SM.MEMBER_NAME, SM.MEMBER_PHOTO, SM.YEAR_POINT from SUN_MEMBER SM ,(select @rowno:=0) t
        ORDER BY SM.YEAR_POINT DESC, SM.MEMBER_ID DESC) temp
        WHERE temp.MEMBER_ID &lt;= 10 OR temp.OPENID= #{openId,jdbcType=VARCHAR}
    </select>
    <update id="addRealPoint">
        UPDATE SUN_MEMBER SET POINT = POINT + #{point,jdbcType=INTEGER}
        WHERE MEMBER_ID IN
        <foreach close=")" collection="battlers" item="battler" open="(" separator=",">
            #{battler}
        </foreach>
    </update>
</mapper>